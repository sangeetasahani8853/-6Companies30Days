class Solution:
    def largestDivisibleSubset(self, nums: List[int]) -> List[int]:
        nums.sort()
        n = len(nums)
        
        # dp[i] stores the size of the largest subset ending at nums[i]
        dp = [1] * n
        # prev[i] stores the index of the previous element in the subset
        prev = [-1] * n
        
        # Fill the dp and prev arrays
        for i in range(1, n):
            for j in range(i):
                if nums[i] % nums[j] == 0 and dp[j] + 1 > dp[i]:
                    dp[i] = dp[j] + 1
                    prev[i] = j
        
        # Find the index of the largest subset
        max_index = max(range(n), key=lambda x: dp[x])
        
        # Reconstruct the subset
        result = []
        while max_index != -1:
            result.append(nums[max_index])
            max_index = prev[max_index]
        
        return result[::-1]  # Reve
