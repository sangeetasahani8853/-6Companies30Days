class Solution:
    def maxProduct(self, s: str) -> int:
        n = len(s)
        
        
        palindrome_mask = [False] * (1 << n)
        def is_palindrome(mask):
            subseq = []
            for i in range(n):
                if mask & (1 << i):  
                    subseq.append(s[i])
            return subseq == subseq[::-1]
        for mask in range(1, 1 << n):
            palindrome_mask[mask] = is_palindrome(mask)
        max_product = 0
        for mask1 in range(1, 1 << n):
            if not palindrome_mask[mask1]:
                continue
            for mask2 in range(mask1 + 1, 1 << n):
                if not palindrome_mask[mask2]:
                    continue
                if mask1 & mask2 == 0:
                    max_product = max(max_product, bin(mask1).count('1') * bin(mask2).count('1'))
        
        return max_product
solution = Solution()
print(solution.maxProduct("Leetcodecom"))  # Output: 9
print(solution.maxProduct("bb"))  # Output: 1
print(solution.maxProduct("accbcaxxcxx"))  # Output: 25
