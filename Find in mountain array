# """
# This is MountainArray's API interface.
# You should not implement it, or speculate about its implementation
# """
#class MountainArray:
#    def get(self, index: int) -> int:
#    def length(self) -> int:

class Solution:
    def findInMountainArray(self, target: int, mountainArr: 'MountainArray') -> int:
        def find_peak():
            left, right = 0, mountainArr.length() - 1
            while left < right:
                mid = (left + right) // 2
                if mountainArr.get(mid) < mountainArr.get(mid + 1):
                    left = mid + 1
                else:
                    right = mid
            return left

        # Binary search function
        def binary_search(left, right, target, is_ascending):
            while left <= right:
                mid = (left + right) // 2
                val = mountainArr.get(mid)
                if val == target:
                    return mid
                if (val < target and is_ascending) or (val > target and not is_ascending):
                    left = mid + 1
                else:
                    right = mid - 1
            return -1

        # Find the peak of the mountain array
        peak = find_peak()

        # Try to find the target in the ascending part
        result = binary_search(0, peak, target, True)
        if result != -1:
            return result

        # Try to find the target in the descending part
        return binary_search(peak + 1, mountainArr.length() - 1, target, False)
