class Solution:
    def incremovableSubarrayCount(self, nums: List[int]) -> int:
        n = len(nums)
        count = 0
        def is_strictly_increasing(arr):
            return all(arr[i] < arr[i + 1] for i in range(len(arr) - 1))
        for i in range(n):
            for j in range(i, n):
                left_part = nums[:i]  
                right_part = nums[j + 1:]  
                if (is_strictly_increasing(left_part + right_part) and
                    (i == 0 or nums[i - 1] < nums[j + 1] if j + 1 < n else True)):
                    count += 1
        
        return count
solution = Solution()
print(solution.incremovableSubarrayCount([1, 2, 3, 4]))  # Output: 10
print(solution.incremovableSubarrayCount([6, 5, 7, 8]))  # Output: 7
print(solution.incremovableSubarrayCount([8, 7, 6, 6]))  # Output: 3
        
